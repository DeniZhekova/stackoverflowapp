{"version":3,"sources":["components/post-questions.js","components/Questions.js","components/Question-Answers.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["PostQuestion","props","state","author_name","question_title","question_input","onChangeAuthorName","bind","onChangeQuestionTitle","onChangeQuestionInput","onSubmit","event","this","setState","target","value","preventDefault","console","log","newQuestion","axios","post","then","res","data","className","class","align","type","onChange","text","src","alt","border","Component","Question","question","to","_id","QuestionList","questions","get","response","catch","error","map","currentQuestion","i","key","style","marginTop","questionList","Answers","answers","author","rating","id","QuestionLink","answersToQuestion","handleAuthorChange","handleTextChange","handleRating","e","newAnswers","match","params","find","elm","filter","currentAnswers","onclick","Rating","AnswersList","Home","Row","Col","sm","Card","CardImg","variant","CardBody","CardTitle","CardText","Button","href","CardFooter","App","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb803b19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\n\nclass PostQuestion extends Component {\n  /*  First we start by adding a constructor to the component class.\n   Inside the constructor we’re setting the initial state of the component by assigned an object to this.state */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      author_name: \"\",\n      question_title: \"\",\n      question_input: \"\"\n      // question_completed: false\n    };\n\n    /* Because in the three implemented methods we’re dealing with the component’s \n        state object we need to make sure to bind those methods to (this)  */\n\n    this.onChangeAuthorName = this.onChangeAuthorName.bind(this);\n    this.onChangeQuestionTitle = this.onChangeQuestionTitle.bind(this);\n    this.onChangeQuestionInput = this.onChangeQuestionInput.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /*  This methods will be used to update the state properties */\n  onChangeAuthorName(event) {\n    this.setState({\n      author_name: event.target.value\n    });\n  }\n  onChangeQuestionTitle(event) {\n    this.setState({\n      question_title: event.target.value\n    });\n  }\n\n  onChangeQuestionInput(event) {\n    this.setState({\n      question_input: event.target.value\n    });\n  }\n\n  /*This method is needed to handle the submit event of the form \n       which will be implemented to create a new questions*/\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    console.log(`Form submitted:`);\n    console.log(`Author input: ${this.state.author_name}`);\n    console.log(`Question input: ${this.state.question_input}`);\n    console.log(`question title: ${this.state.question_title}`);\n\n    const newQuestion = {\n      author_name: this.state.author_name,\n      question_title: this.state.question_title,\n      question_input: this.state.question_input\n    };\n\n\n    axios\n      .post(\"http://localhost:4000/questions/add\", newQuestion)\n      .then(res => console.log(res.data));\n\n    this.setState({\n      author_name: \"\",\n      question_title: \"\",\n      question_input: \"\"\n    });\n  }\n  render() {\n    return (\n  <div className=\"container\">\n    <br></br>\n    <h3 class=\"h3\" align=\"center\">Stackoverflow</h3>\n    <p className=\"slogan\" align=\"center\">This is an exmaple of a clone for the popular website Stackoverflow. Please ask your question down below:</p>\n\n\n        <div className=\"form-group\">\n          <label>What is your name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={this.state.author_name}\n            onChange={this.onChangeAuthorName}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>What is the topic about:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={this.state.question_title}\n            onChange={this.onChangeQuestionTitle}\n          />\n        </div>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Ask Question: </label>\n            <textarea\n              text=\"textarea\"\n              className=\"form-control\"\n              value={this.state.question_input}\n              onChange={this.onChangeQuestionInput}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Submit Question\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n        <h3 class=\"h3\" align=\"center\" >Questions are everywhere, answers are on StackOverflow</h3>\n        <img className=\"answer\"\n             src=\"https://res.cloudinary.com/dedpxe9qh/image/upload/v1587371957/Screenshot_2020-04-20_at_10.39.04_lykm2m.png\"\n             alt=\"answer\" border=\"0\"/>\n      </div>\n\n    );\n  }\n}\n\nexport default PostQuestion;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Question = props => (\n  <tr>\n    <td>{props.question.author_name}</td>\n    <td>{props.question.question_title}</td>\n    <td>{props.question.question_input}</td>\n    <td>\n      <Link to={\"/Question&Answers/\" + props.question._id}>Answer</Link>\n    </td>\n  </tr>\n);\n\nclass QuestionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { questions: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:4000/questions/\")\n      .then(response => {\n        this.setState({ questions: response.data });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  questionList() {\n    return this.state.questions.map(function(currentQuestion, i) {\n      return <Question question={currentQuestion} key={i} />;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Question List</h3>\n        <table className=\"table table-hover\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Title</th>\n              <th>Question</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{this.questionList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default QuestionList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Rating } from \"semantic-ui-react\";\n\n\nconst Answers = props => (\n\n  <tr>\n    <td>{props.answers.author}</td>\n    <td>{props.answers.text}</td>\n    <td>{props.answers.rating}</td>\n    <td><h6>1</h6></td>\n    <td><button  id=\"upvote\">Upvote</button></td>\n    <td><button id=\"downvote\">Downvote</button></td>\n  </tr>\n\n//onClick={this.increment} and decrement onClick for buttons\n//function increment(){ this.setState({score: this.state.score + 1,});}\n//function decrement(){this.setState({score: this.state.score - 1,});}\n);\n\nclass QuestionLink extends Component {\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      currentQuestion: {},\n      answers: [],\n      author: \"\",\n      text: \"\",\n      rating: 0,\n      answersToQuestion: \"\",\n    };\n    this.handleAuthorChange = this.handleAuthorChange.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleRating = this.handleRating.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  handleAuthorChange(e) {\n    this.setState({ author: e.target.value });\n  }\n  handleTextChange(e) {\n    this.setState({ text: e.target.value });\n  }\n  handleRating(e) {\n    this.setState({ rating: e.target.value});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newAnswers = {\n      author: this.state.author,\n      text: this.state.text,\n      answersToQuestion: this.props.match.params.id\n    };\n\n    axios\n      .post(\"http://localhost:4000/answers/addAnswers/\", newAnswers)\n      .then(res => console.log(res.data));\n\n    this.setState({\n      author: \"\",\n      text: \"\",\n      answersToQuestion: this.props.match.params.id\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      answersToQuestion: this.props.match.params.id\n    });\n    axios.get(\"http://localhost:4000/questions/\").then(response => {\n      this.setState({\n        currentQuestion: response.data.find(\n          elm => elm._id === this.props.match.params.id\n        )\n      });\n    });\n\n    axios\n      .get(\"http://localhost:4000/answers/\")\n      .then(response => {\n        this.setState({ answers: response.data });\n      })\n\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  AnswersList() {\n    return this.state.answers\n      .filter(e => e.answersToQuestion === this.props.match.params.id)\n      .map(function(currentAnswers, i) {\n        return <Answers answers={currentAnswers} key={i} />;\n      });\n  }\n\n  ratingbtn() {\n    if (this.state.rating = onclick) {\n      return +1;\n    }\n    return (\n      <div className=\"Rating\">\n        <button\n          type=\"button\"\n          value={this.state.rating}\n          onChange={this.handleRating}\n        />\n        <br />\n        <Rating rating={this.state.rating}/>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n\n            <h4 className=\"display-5\">\n              {this.state.currentQuestion.question_input}\n            </h4>\n            <p className=\"lead\">{this.state.currentQuestion.author_name}</p>\n            <hr className=\"my-4\" />\n            <div className=\"form-group\">\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={this.state.author}\n                onChange={this.handleAuthorChange}\n              />\n            </div>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label>Comment: </label>\n                <textarea\n                  text=\"textarea\"\n                  className=\"form-control\"\n                  value={this.state.text}\n                  onChange={this.handleTextChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"submit\"\n                  value=\"Submit Answer\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n            </form>\n            <h3>Answers</h3>\n            <table className=\"table table-hover\" style={{ marginTop: 20 }}>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Answer</th>\n                  <th>Rating</th>\n                </tr>\n              </thead>\n              <tbody>{this.AnswersList()}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionLink;\n","import React, { Component } from \"react\";\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, Button, CardFooter, Row, Col\n} from 'reactstrap';\n\n\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <div>\n                <h3 align=\"center\">Featured Job Positions</h3>\n                <Row>\n                    <Col sm=\"4\">\n                    <Card>\n                        <CardImg variant=\"top\" src=\"https://www.version2.dk/sites/v2/files/nyt_microsoft_logo.png\" />\n                        <CardBody>\n                            <CardTitle>Full-time Student Developer</CardTitle>\n                            <CardText>\n                                Do you want to be at the heart of cloud computing?\n                                Do you want to work on a meaningful and impactful\n                                project and make a difference to the US government\n                                and country?\n\n                                <br></br>\n                                Software engineers (SWEs) work with teammates to solve\n                                problems and build innovative software solutions. You\n                                are passionate about customers and product quality, and\n                                you provide technical guidance to Program Managers as\n                                they consider user needs and product requirements.\n                                You will also be expected to demonstrate an ability to\n                                learn and adopt relevant new technologies, tools,\n                                methods and processes to leverage in your solutions.\n                            </CardText>\n                        </CardBody>\n                        <Button href=\"https://careers.microsoft.com/students/us/en/job/771320/Full-Time-Opportunities-for-Students-and-Recent-Graduates-with-Security-Clearance-Software-Development\">Apply</Button>\n                        <CardFooter>\n                            <small className=\"text-muted\">Date posted : Apr 8, 2020</small>\n                        </CardFooter>\n                    </Card>\n                    </Col>\n                    <Col sm=\"4\">\n                    <Card>\n                        <CardImg variant=\"top\" src=\"https://www.frenchweb.fr/wp-content/uploads/2018/04/uneskillvalue.jpg\"/>\n                        <CardBody>\n                            <CardTitle>Developer - All levels</CardTitle>\n                            <CardText>\n                                Enhance the React front-end features of the app and structure the first front-end team. If you like mobile development, they have many tasks in this field too.\n                                <br></br>\n                                You have a lot of ambitions in tech and you'd like to find a good company to catalyze this ambition (real ambition, not just having good teammates & learning edge libraries).\n                            </CardText>\n                        </CardBody>\n                        <Button href=\"https://bit.ly/2VlVeRs\">Apply</Button>\n                        <CardFooter>\n                            <small className=\"text-muted\">Date posted : Feb 19, 2020</small>\n                        </CardFooter>\n                    </Card></Col>\n                    <Col sm=\"4\">\n                    <Card>\n                        <CardImg variant=\"top\" src=\"https://bit.ly/2XQB7fS\" />\n                        <CardBody>\n                            <CardTitle>Senior Frontend Engineer</CardTitle>\n                            <CardText>\n                                Shogun, and we're on a mission to help people create the best eCommerce experiences in the world.\n                                Basic Qualifications:\n                                <br></br>\n                                <br></br>\n                                &#9675; Working knowledge of TypeScript (and JavaScript), Tests (Jest, React-Testing-Library etc)<br></br>\n                                &#9675; Working experience with frontend frameworks such as React<br></br>\n                                &#9675; Proven pixel-perfect CSS skills<br></br>\n                                &#9675; Real-world code we can review<br></br>\n                            </CardText>\n                        </CardBody>\n                        <Button href=\"https://stackoverflow.com/jobs?id=360336&pg=3\">Apply</Button>\n                        <CardFooter>\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\n                        </CardFooter>\n                    </Card></Col>\n                </Row>\n            </div>\n        );\n    }\n}\nexport default Home;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport PostQuestion from \"./components/post-questions\";\nimport QuestionList from \"./components/Questions\";\nimport QuestionLink from \"./components/Question-Answers\";\nimport Home from \"./components/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/home\" className=\"nav-link\">\n                    Home\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/post\" className=\"nav-link\">\n                    Post questions\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/Questions\" className=\"nav-link\">\n                    Questions List\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <img class=\"image\" src=\"https://res.cloudinary.com/dedpxe9qh/image/upload/v1587370289/stackoverflow-header_vnsdgy.png\" alt=\"stackoverflow-header\" border=\"0\"/>\n          <br />\n          <Switch>\n            <Route path=\"/home/\" component={Home}/>\n            <Route path=\"/post/\" component={PostQuestion} />\n            <Route path=\"/Questions/\" component={QuestionList} />\n            <Route\n              path=\"/Question&Answers/:id\"\n              render={props => <QuestionLink {...props} />}\n            />\n          </Switch>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}